{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r0bp3Ih-bzTp",
        "outputId": "125ed806-c87f-4261-b997-a3e7f57428b7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "11\n"
          ]
        }
      ],
      "source": [
        "#Q1\n",
        "r='python java'\n",
        "count =0\n",
        "for i in r:\n",
        "  count+=1\n",
        "print(count)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Q2\n",
        "def reverse(a):\n",
        "    str = ' '\n",
        "    for i in a:\n",
        "      str = i +str\n",
        "    return str\n",
        "a = 'python'\n",
        "print(f'before reverse : ', end=\"\")\n",
        "print(a)\n",
        "print(f'after reverse : ', end=\"\")\n",
        "print(reverse(a))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JSCZY8guBJpv",
        "outputId": "1a8999a4-2a10-4b72-df0d-542bfd31e196"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "before reverse : python\n",
            "after reverse : nohtyp \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Q3\n",
        "a = 'nun'\n",
        "b = ''\n",
        "for i in a:\n",
        "   b = i + b\n",
        "if (a ==b ):\n",
        "    print(\"it is a plaindrome\")\n",
        "else:\n",
        "    print(\"it is not a plaindrome\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "f8f05db3-c12f-4629-b3b4-773512e1c349",
        "id": "Fl6MumAAZXz8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "it is a plaindrome\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Q6\n",
        "a='python'\n",
        "b= ' '\n",
        "for i in a:\n",
        "  if i not in 'aeiouAEIOU':\n",
        "    b= b+i\n",
        "print(b)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a72328b9-2188-44cc-eeaf-bad3cbf4484d",
        "id": "jYZZe2ZvkLLF"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " pythn\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Q9\n",
        "string='sharuk khan'\n",
        "a={i:string.count(i) for i in set(string)}\n",
        "print(a)"
      ],
      "metadata": {
        "id": "EN6mXZ38qVm0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "aad6c6eb-fdef-44ad-9fb5-196eac62917d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'k': 2, 'a': 2, 'u': 1, 'n': 1, 'r': 1, 's': 1, 'h': 2, ' ': 1}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Q10\n",
        "print(f'sharuk khan')\n",
        "String ='shaurk khan'\n",
        "for i in string:\n",
        "  print(ord(i),end=' ')"
      ],
      "metadata": {
        "id": "vSwRYx8to7XL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "dfeab84a-6500-457c-cb32-98c2e5ea4d4b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "sharuk khan\n",
            "115 104 97 114 117 107 32 107 104 97 110 "
          ]
        }
      ]
    }
  ]
}